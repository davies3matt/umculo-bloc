# # This "input" configures a global authorization rule to enable public access to
# # all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User @model @auth(rules: [{ allow: groups, groups: ["User"], operations: [read, update] }]) {
  id: ID!
  name: String
  phoneNumber: String
  email: String
  groups: [Group] @manyToMany(relationName: "UsersGroups")
  items: [Item] @hasMany(indexName: "UserItems", fields: ["id"])
  pendingGroups: [ID] 
}

type Group @model @auth(rules: [{ allow: groups, groups: ["User"], operations: [create, read, update, delete] }]) {
  id: ID!
  name: String
  type: GroupType
  users: [User] @manyToMany(relationName: "UsersGroups")
  pendingUsers: [ID]
  items: [Item] @hasMany(indexName: "GroupItems", fields: ["id"])
}

type Item @model @auth(rules: [{ allow: groups, groups: ["User"], operations: [create, read, update, delete] }]) {
  id: ID! 
  itemGroupId: ID! @index(name: "GroupItems", sortKeyFields: ["id"])
  itemUserId: ID! @index(name: "UserItems", sortKeyFields: ["id"])
  name: String!
  category: Category!
  group: Group! @belongsTo(fields: ["itemGroupId"])
  assignedTo: User @belongsTo(fields: ["itemUserId"])
}

enum Category {
  KITCHEN
  BATHROOM
  LIVING_AREA
  MISC
}

enum GroupType {
  HOUSE_SHARE
  DIGS
  FAMILY
  COMMUNE
}

input InviteDetails {
  email: String
  phoneNumber: String
}
type Mutation {
  inviteUsersToGroup(groupId: String, users: [InviteDetails]): Group @function(name: "customFunction-${env}") @auth(rules: [{allow: groups, groups: ["User"]}])
  inviteResponse(groupId: String, accept: Boolean): Group @function(name: "customFunction-${env}") @auth(rules: [{allow: groups, groups: ["User"]}])
}
type Query {
  getUserProfile: User @function(name: "customFunction-${env}") @auth(rules: [{allow: groups, groups: ["User"]}])
}
